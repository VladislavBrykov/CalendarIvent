{"ast":null,"code":"\"use strict\";\n\nvar qs = require(\"querystring\");\n\nvar debug = require(\"debug\")(\"nba\");\n\nvar template = require(\"nba-client-template\");\n\nvar camelCase = require(\"camel-case\");\n\nvar _require = require(\"./transforms\");\n\nvar general = _require.general;\nvar players = _require.players;\nvar base = _require.base;\nvar lineups = _require.lineups;\nvar paramMap = {};\ntemplate.parameters.forEach(function (param) {\n  paramMap[param.name] = param;\n});\nvar transformMap = {\n  playerProfile: general,\n  playerInfo: general,\n  playersInfo: players,\n  teamStats: base,\n  teamSplits: general,\n  teamYears: base,\n  playerSplits: general,\n  shots: general,\n  scoreboard: general,\n  playByPlay: general,\n  teamHistoricalLeaders: general,\n  teamInfoCommon: general,\n  commonTeamRoster: general,\n  teamPlayerDashboard: general,\n  lineups: lineups,\n  playerTracking: general,\n  homepageV2: general,\n  assistTracker: general,\n  playerStats: general,\n  playerClutch: general,\n  teamClutch: general,\n  playerShooting: general,\n  teamShooting: general\n};\n\nfunction makeStatsMethod(endpoint, transport) {\n  var defaults = {};\n  endpoint.parameters.forEach(function (param) {\n    defaults[param] = paramMap[param][\"default\"];\n  });\n  var ccName = camelCase(endpoint.name);\n  var transform = transformMap[ccName]; // if (transform == null) {\n  //   throw new Error(`No transform found for ${ccName}`);\n  // }\n\n  function statsMethod() {\n    var query = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n    var reqParams = Object.assign({}, defaults, query);\n    debug(\"stats request\", endpoint.url, reqParams);\n    return transport(endpoint.url, reqParams).then(function (response) {\n      if (response == null) return; // response is something like \"GameID is required\"\n\n      if (typeof response === \"string\") throw new Error(response);\n      return transform ? transform(response) : response;\n    });\n  }\n\n  statsMethod.parameters = endpoint.parameters;\n  statsMethod.defaults = defaults;\n  return statsMethod;\n}\n\nfunction makeStatsClient(transport) {\n  var client = {};\n  template.stats_endpoints.forEach(function (endpoint) {\n    client[camelCase(endpoint.name)] = makeStatsMethod(endpoint, transport);\n  });\n  client.withTransport = makeStatsClient;\n  return client;\n}\n\nmodule.exports = makeStatsClient(require(\"./get-json\"));","map":{"version":3,"sources":["/Users/vladislav/Desktop/react-calendar/node_modules/nba/lib/stats.js"],"names":["qs","require","debug","template","camelCase","_require","general","players","base","lineups","paramMap","parameters","forEach","param","name","transformMap","playerProfile","playerInfo","playersInfo","teamStats","teamSplits","teamYears","playerSplits","shots","scoreboard","playByPlay","teamHistoricalLeaders","teamInfoCommon","commonTeamRoster","teamPlayerDashboard","playerTracking","homepageV2","assistTracker","playerStats","playerClutch","teamClutch","playerShooting","teamShooting","makeStatsMethod","endpoint","transport","defaults","ccName","transform","statsMethod","query","arguments","length","undefined","options","reqParams","Object","assign","url","then","response","Error","makeStatsClient","client","stats_endpoints","withTransport","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar qs = require(\"querystring\");\nvar debug = require(\"debug\")(\"nba\");\nvar template = require(\"nba-client-template\");\nvar camelCase = require(\"camel-case\");\n\nvar _require = require(\"./transforms\");\n\nvar general = _require.general;\nvar players = _require.players;\nvar base = _require.base;\nvar lineups = _require.lineups;\n\nvar paramMap = {};\ntemplate.parameters.forEach(function (param) {\n  paramMap[param.name] = param;\n});\n\nvar transformMap = {\n  playerProfile: general,\n  playerInfo: general,\n  playersInfo: players,\n  teamStats: base,\n  teamSplits: general,\n  teamYears: base,\n  playerSplits: general,\n  shots: general,\n  scoreboard: general,\n  playByPlay: general,\n  teamHistoricalLeaders: general,\n  teamInfoCommon: general,\n  commonTeamRoster: general,\n  teamPlayerDashboard: general,\n  lineups: lineups,\n  playerTracking: general,\n  homepageV2: general,\n  assistTracker: general,\n  playerStats: general,\n  playerClutch: general,\n  teamClutch: general,\n  playerShooting: general,\n  teamShooting: general\n};\n\nfunction makeStatsMethod(endpoint, transport) {\n\n  var defaults = {};\n  endpoint.parameters.forEach(function (param) {\n    defaults[param] = paramMap[param][\"default\"];\n  });\n\n  var ccName = camelCase(endpoint.name);\n  var transform = transformMap[ccName];\n  // if (transform == null) {\n  //   throw new Error(`No transform found for ${ccName}`);\n  // }\n\n  function statsMethod() {\n    var query = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    var reqParams = Object.assign({}, defaults, query);\n\n    debug(\"stats request\", endpoint.url, reqParams);\n    return transport(endpoint.url, reqParams).then(function (response) {\n      if (response == null) return;\n\n      // response is something like \"GameID is required\"\n      if (typeof response === \"string\") throw new Error(response);\n\n      return transform ? transform(response) : response;\n    });\n  }\n\n  statsMethod.parameters = endpoint.parameters;\n  statsMethod.defaults = defaults;\n  return statsMethod;\n}\n\nfunction makeStatsClient(transport) {\n  var client = {};\n  template.stats_endpoints.forEach(function (endpoint) {\n    client[camelCase(endpoint.name)] = makeStatsMethod(endpoint, transport);\n  });\n  client.withTransport = makeStatsClient;\n  return client;\n}\n\nmodule.exports = makeStatsClient(require(\"./get-json\"));"]},"metadata":{},"sourceType":"script"}