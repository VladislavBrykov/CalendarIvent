{"ast":null,"code":"\"use strict\";\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar findWhere = require(\"lodash.findwhere\");\n\nmodule.exports = function mergeCollections(idProp, a, b) {\n  return a.map(function (itemA) {\n    var itemB = findWhere(b, _defineProperty({}, idProp, itemA[idProp]));\n    return Object.assign({}, itemA, itemB);\n  });\n};","map":{"version":3,"sources":["/Users/vladislav/Desktop/react-calendar/node_modules/nba/lib/util/merge-collections.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","findWhere","require","module","exports","mergeCollections","idProp","a","b","map","itemA","itemB","assign"],"mappings":"AAAA;;AAEA,SAASA,eAAT,CAAyBC,GAAzB,EAA8BC,GAA9B,EAAmCC,KAAnC,EAA0C;AAAE,MAAID,GAAG,IAAID,GAAX,EAAgB;AAAEG,IAAAA,MAAM,CAACC,cAAP,CAAsBJ,GAAtB,EAA2BC,GAA3B,EAAgC;AAAEC,MAAAA,KAAK,EAAEA,KAAT;AAAgBG,MAAAA,UAAU,EAAE,IAA5B;AAAkCC,MAAAA,YAAY,EAAE,IAAhD;AAAsDC,MAAAA,QAAQ,EAAE;AAAhE,KAAhC;AAA0G,GAA5H,MAAkI;AAAEP,IAAAA,GAAG,CAACC,GAAD,CAAH,GAAWC,KAAX;AAAmB;;AAAC,SAAOF,GAAP;AAAa;;AAEjN,IAAIQ,SAAS,GAAGC,OAAO,CAAC,kBAAD,CAAvB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,gBAAT,CAA0BC,MAA1B,EAAkCC,CAAlC,EAAqCC,CAArC,EAAwC;AACvD,SAAOD,CAAC,CAACE,GAAF,CAAM,UAAUC,KAAV,EAAiB;AAC5B,QAAIC,KAAK,GAAGV,SAAS,CAACO,CAAD,EAAIhB,eAAe,CAAC,EAAD,EAAKc,MAAL,EAAaI,KAAK,CAACJ,MAAD,CAAlB,CAAnB,CAArB;AACA,WAAOV,MAAM,CAACgB,MAAP,CAAc,EAAd,EAAkBF,KAAlB,EAAyBC,KAAzB,CAAP;AACD,GAHM,CAAP;AAID,CALD","sourcesContent":["\"use strict\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar findWhere = require(\"lodash.findwhere\");\n\nmodule.exports = function mergeCollections(idProp, a, b) {\n  return a.map(function (itemA) {\n    var itemB = findWhere(b, _defineProperty({}, idProp, itemA[idProp]));\n    return Object.assign({}, itemA, itemB);\n  });\n};"]},"metadata":{},"sourceType":"script"}