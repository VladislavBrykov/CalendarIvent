{"ast":null,"code":"\"use strict\";\n\nvar camelCase = require(\"camel-case\");\n\nvar parameters = [{\n  name: \"name\",\n  \"default\": \"offensive\",\n  values: [\"offensive\", \"defensive\"]\n}, {\n  name: \"seasonType\",\n  \"default\": \"Reg\",\n  values: [\"Reg\", \"Post\"]\n}, {\n  name: \"category\",\n  \"default\": null,\n  values: [\"Transition\", \"PRBallHandler\", \"PRRollman\", \"Postup\", \"Spotup\", \"Handoff\", \"Cut\", \"OffScreen\", \"OffRebound\", \"Misc\"]\n}, {\n  name: \"season\",\n  \"default\": 2015\n}];\nvar synergyEndpoints = [{\n  name: \"player_play_type\",\n  url: \"http://stats-prod.nba.com/wp-json/statscms/v1/synergy/player/\"\n}, {\n  name: \"team_play_type\",\n  url: \"http://stats-prod.nba.com/wp-json/statscms/v1/synergy/team/\"\n}];\nvar defaults = {};\nparameters.forEach(function (param) {\n  defaults[param.name] = param[\"default\"];\n});\n\nfunction makeSynergyMethod(endpoint, transport) {\n  function synergyMethod() {\n    var query = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n    var reqParams = Object.assign({}, defaults, query);\n    return transport(endpoint.url, reqParams).then(function (response) {\n      return response;\n    });\n  }\n\n  return synergyMethod;\n}\n\nfunction makeSynergyClient(transport) {\n  var client = {};\n  synergyEndpoints.forEach(function (endpoint) {\n    client[camelCase(endpoint.name)] = makeSynergyMethod(endpoint, transport);\n  });\n  client.withTransport = makeSynergyClient;\n  return client;\n}\n\nmodule.exports = makeSynergyClient(require(\"./get-json\"));","map":{"version":3,"sources":["/Users/vladislav/Desktop/react-calendar/node_modules/nba/lib/synergy.js"],"names":["camelCase","require","parameters","name","values","synergyEndpoints","url","defaults","forEach","param","makeSynergyMethod","endpoint","transport","synergyMethod","query","arguments","length","undefined","options","reqParams","Object","assign","then","response","makeSynergyClient","client","withTransport","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,SAAS,GAAGC,OAAO,CAAC,YAAD,CAAvB;;AAEA,IAAIC,UAAU,GAAG,CAAC;AAChBC,EAAAA,IAAI,EAAE,MADU;AAEhB,aAAW,WAFK;AAGhBC,EAAAA,MAAM,EAAE,CAAC,WAAD,EAAc,WAAd;AAHQ,CAAD,EAId;AACDD,EAAAA,IAAI,EAAE,YADL;AAED,aAAW,KAFV;AAGDC,EAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,MAAR;AAHP,CAJc,EAQd;AACDD,EAAAA,IAAI,EAAE,UADL;AAED,aAAW,IAFV;AAGDC,EAAAA,MAAM,EAAE,CAAC,YAAD,EAAe,eAAf,EAAgC,WAAhC,EAA6C,QAA7C,EAAuD,QAAvD,EAAiE,SAAjE,EAA4E,KAA5E,EAAmF,WAAnF,EAAgG,YAAhG,EAA8G,MAA9G;AAHP,CARc,EAYd;AACDD,EAAAA,IAAI,EAAE,QADL;AAED,aAAW;AAFV,CAZc,CAAjB;AAiBA,IAAIE,gBAAgB,GAAG,CAAC;AAAEF,EAAAA,IAAI,EAAE,kBAAR;AAA4BG,EAAAA,GAAG,EAAE;AAAjC,CAAD,EAAqG;AAAEH,EAAAA,IAAI,EAAE,gBAAR;AAA0BG,EAAAA,GAAG,EAAE;AAA/B,CAArG,CAAvB;AAEA,IAAIC,QAAQ,GAAG,EAAf;AACAL,UAAU,CAACM,OAAX,CAAmB,UAAUC,KAAV,EAAiB;AAClCF,EAAAA,QAAQ,CAACE,KAAK,CAACN,IAAP,CAAR,GAAuBM,KAAK,CAAC,SAAD,CAA5B;AACD,CAFD;;AAIA,SAASC,iBAAT,CAA2BC,QAA3B,EAAqCC,SAArC,EAAgD;AAC9C,WAASC,aAAT,GAAyB;AACvB,QAAIC,KAAK,GAAGC,SAAS,CAACC,MAAV,IAAoB,CAApB,IAAyBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAA1C,GAAsD,EAAtD,GAA2DF,SAAS,CAAC,CAAD,CAAhF;AACA,QAAIG,OAAO,GAAGH,SAAS,CAACC,MAAV,IAAoB,CAApB,IAAyBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAA1C,GAAsD,EAAtD,GAA2DF,SAAS,CAAC,CAAD,CAAlF;AAEA,QAAII,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBd,QAAlB,EAA4BO,KAA5B,CAAhB;AACA,WAAOF,SAAS,CAACD,QAAQ,CAACL,GAAV,EAAea,SAAf,CAAT,CAAmCG,IAAnC,CAAwC,UAAUC,QAAV,EAAoB;AACjE,aAAOA,QAAP;AACD,KAFM,CAAP;AAGD;;AACD,SAAOV,aAAP;AACD;;AAED,SAASW,iBAAT,CAA2BZ,SAA3B,EAAsC;AACpC,MAAIa,MAAM,GAAG,EAAb;AACApB,EAAAA,gBAAgB,CAACG,OAAjB,CAAyB,UAAUG,QAAV,EAAoB;AAC3Cc,IAAAA,MAAM,CAACzB,SAAS,CAACW,QAAQ,CAACR,IAAV,CAAV,CAAN,GAAmCO,iBAAiB,CAACC,QAAD,EAAWC,SAAX,CAApD;AACD,GAFD;AAGAa,EAAAA,MAAM,CAACC,aAAP,GAAuBF,iBAAvB;AACA,SAAOC,MAAP;AACD;;AAEDE,MAAM,CAACC,OAAP,GAAiBJ,iBAAiB,CAACvB,OAAO,CAAC,YAAD,CAAR,CAAlC","sourcesContent":["\"use strict\";\n\nvar camelCase = require(\"camel-case\");\n\nvar parameters = [{\n  name: \"name\",\n  \"default\": \"offensive\",\n  values: [\"offensive\", \"defensive\"]\n}, {\n  name: \"seasonType\",\n  \"default\": \"Reg\",\n  values: [\"Reg\", \"Post\"]\n}, {\n  name: \"category\",\n  \"default\": null,\n  values: [\"Transition\", \"PRBallHandler\", \"PRRollman\", \"Postup\", \"Spotup\", \"Handoff\", \"Cut\", \"OffScreen\", \"OffRebound\", \"Misc\"]\n}, {\n  name: \"season\",\n  \"default\": 2015\n}];\n\nvar synergyEndpoints = [{ name: \"player_play_type\", url: \"http://stats-prod.nba.com/wp-json/statscms/v1/synergy/player/\" }, { name: \"team_play_type\", url: \"http://stats-prod.nba.com/wp-json/statscms/v1/synergy/team/\" }];\n\nvar defaults = {};\nparameters.forEach(function (param) {\n  defaults[param.name] = param[\"default\"];\n});\n\nfunction makeSynergyMethod(endpoint, transport) {\n  function synergyMethod() {\n    var query = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    var reqParams = Object.assign({}, defaults, query);\n    return transport(endpoint.url, reqParams).then(function (response) {\n      return response;\n    });\n  }\n  return synergyMethod;\n}\n\nfunction makeSynergyClient(transport) {\n  var client = {};\n  synergyEndpoints.forEach(function (endpoint) {\n    client[camelCase(endpoint.name)] = makeSynergyMethod(endpoint, transport);\n  });\n  client.withTransport = makeSynergyClient;\n  return client;\n}\n\nmodule.exports = makeSynergyClient(require(\"./get-json\"));"]},"metadata":{},"sourceType":"script"}