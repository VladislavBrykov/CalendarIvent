{"ast":null,"code":"import _regeneratorRuntime from \"/Users/vladislav/Desktop/react-calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/vladislav/Desktop/react-calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/vladislav/Desktop/react-calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/vladislav/Desktop/react-calendar/src/pages/HolidayPage.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport './UsersPaje.css';\nimport '../../components/posts/posts.css'; // import newPost from '../components/new_post';\n\nfunction PostIdPage(params) {\n  _s();\n\n  var _this = this;\n\n  // Страница постов\n  var styles = {\n    //Стили для страницы\n    position: 'absolute',\n    top: '-7px',\n    left: '50%',\n    transform: 'translateX(-50%)'\n  };\n  var result;\n  var category;\n  var username;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      dataFromServer = _useState2[0],\n      setDataFromServer = _useState2[1]; //Используем хук состояния для данных с сервера\n\n\n  var loadData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res, category, res_cat;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              //Функция с запросом на сервер\n              params = window.location.href; //получаем полную ссылку страницы\n\n              params = params.match(/post-id([^ ]*)/)[1]; //получаем все что идет после /post-id\n\n              params = parseInt(params.replace(/\\D+/g, \"\")); //получаем айди поста со ссылки\n\n              axios.defaults.baseURL = 'http://localhost:3000/api';\n              _context.next = 6;\n              return axios.get(\"http://localhost:3000/api/posts/\" + params);\n\n            case 6:\n              res = _context.sent;\n              result = res.data.rp;\n              console.log(result);\n              axios.defaults.baseURL = 'http://localhost:3000/api';\n              _context.next = 12;\n              return axios.get(\"http://localhost:3000/api/categories/\" + result[0].id_categiries);\n\n            case 12:\n              category = _context.sent;\n              result[0].category = category.data.rp[0].category;\n              axios.defaults.baseURL = 'http://localhost:3000/api';\n              _context.next = 17;\n              return axios.get(\"http://localhost:3000/api/users/\" + result[0].id_user);\n\n            case 17:\n              username = _context.sent;\n              console.log(username);\n              result[0].username = username.data.rp.login;\n              axios.defaults.baseURL = 'http://localhost:3000/api';\n              _context.next = 23;\n              return axios.get(\"http://localhost:3000/api/posts/\" + result[0].id + \"/comments\");\n\n            case 23:\n              res_cat = _context.sent;\n              console.log(res_cat); ////console.log(result);\n              //  result = {\n              //     \"id\": res.data.rp.id,\n              //     \"content\": res.data.rp.content,\n              //     \"title\": res.data.rp.title\n              //  }\n\n              setDataFromServer(result);\n\n            case 26:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loadData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: styles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, dataFromServer // И тут выходит мы српвшиваем, если у нас есть что-то в стейте, тогда выводим этот стейт, а если нет, то тогда показываем лоадер !\n  // как то так )\n  ? dataFromServer.map(function (item, index) {\n    return (\n      /*#__PURE__*/\n      // <div class=\"wrap\" id=\"pressed\">\n      //   <h2 class=\"flex\" key={index}>{item.title}</h2>\n      //   <h4 class=\"flex\" key={index}>{item.content}</h4>\n      //   <label>Название</label>\n      // </div>)\n      React.createElement(\"div\", {\n        style: styles,\n        class: \"form_auth_block\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"form_auth_block_content\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        class: \"form_auth_block_head_text\",\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 19\n        }\n      }, item.title), /*#__PURE__*/React.createElement(\"form\", {\n        class: \"form_auth_style\",\n        action: \"#\",\n        method: \"post\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }\n      }, item.content), /*#__PURE__*/React.createElement(\"label\", {\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }\n      }, item.username), /*#__PURE__*/React.createElement(\"label\", {\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }\n      }, item.category), /*#__PURE__*/React.createElement(\"button\", {\n        class: \"dislike\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        class: \"fa fa-thumbs-o-down\",\n        \"aria-hidden\": \"true\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 45\n        }\n      }, \"+\")), /*#__PURE__*/React.createElement(\"button\", {\n        class: \"like\",\n        placeholder: \"-\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        class: \"fa fa-thumbs-o-up\",\n        \"aria-hidden\": \"true\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 58\n        }\n      }, \"-\")), /*#__PURE__*/React.createElement(\"label\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }\n      }, \"\\u0412\\u044B \\u043C\\u043E\\u0436\\u0435\\u0442\\u0435 \\u043E\\u0441\\u0442\\u0430\\u0432\\u0438\\u0442\\u044C \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439\"), /*#__PURE__*/React.createElement(\"textarea\", {\n        rows: \"1\",\n        cols: \"52\",\n        name: \"textArea\",\n        required: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        class: \"form_auth_button\",\n        type: \"submit\",\n        name: \"form_auth_submit\",\n        onClick: function onClick() {\n          return loadData();\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/posts\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 119\n        }\n      }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439\")), /*#__PURE__*/React.createElement(\"button\", {\n        class: \"form_auth_button\",\n        type: \"submit\",\n        name: \"form_auth_submit\",\n        onClick: function onClick() {\n          return loadData();\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/posts\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 119\n        }\n      }, \"\\u0427\\u0438\\u0442\\u0430\\u0442\\u044C \\u0432\\u0441\\u0435 \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0438\")))))\n    );\n  }) : document.addEventListener('DOMContentLoaded', loadData()) //показать всех пользователей запуск функции при загрузке страници\n  , /*#__PURE__*/React.createElement(\"script\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  })));\n}\n\n_s(PostIdPage, \"CB4/PFJBY+I14NPGU8CPhKvZ4hY=\");\n\n_c = PostIdPage;\nexport default PostIdPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostIdPage\");","map":{"version":3,"sources":["/Users/vladislav/Desktop/react-calendar/src/pages/HolidayPage.jsx"],"names":["useState","axios","Link","PostIdPage","params","styles","position","top","left","transform","result","category","username","dataFromServer","setDataFromServer","loadData","window","location","href","match","parseInt","replace","defaults","baseURL","get","res","data","rp","console","log","id_categiries","id_user","login","id","res_cat","map","item","index","title","content","document","addEventListener"],"mappings":"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","sourcesContent":["\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport './UsersPaje.css';\nimport '../../components/posts/posts.css'\n// import newPost from '../components/new_post';\n\n\nfunction PostIdPage(params) {// Страница постов\n\n\n  const styles = {//Стили для страницы\n    position: 'absolute',\n    top: '-7px',\n    left: '50%',\n    transform: 'translateX(-50%)',\n  }\n\n  let result;\n  let category;\n  let username;\n\n  const [dataFromServer, setDataFromServer] = useState(null); //Используем хук состояния для данных с сервера\n\n  const loadData = async () => { //Функция с запросом на сервер\n    params = window.location.href; //получаем полную ссылку страницы\n    params = params.match(/post-id([^ ]*)/)[1];   //получаем все что идет после /post-id\n    params = parseInt(params.replace(/\\D+/g, \"\"));  //получаем айди поста со ссылки\n\n    axios.defaults.baseURL = 'http://localhost:3000/api';\n    const res = await axios.get(\"http://localhost:3000/api/posts/\" + params)\n    result = res.data.rp;\n    console.log(result);\n\n    axios.defaults.baseURL = 'http://localhost:3000/api';\n    const category = await axios.get(\"http://localhost:3000/api/categories/\" + result[0].id_categiries)\n    result[0].category = category.data.rp[0].category;\n\n    axios.defaults.baseURL = 'http://localhost:3000/api';\n    username = await axios.get(\"http://localhost:3000/api/users/\" + result[0].id_user)\n    console.log(username);\n\n    result[0].username = username.data.rp.login;\n\n    axios.defaults.baseURL = 'http://localhost:3000/api';\n    const res_cat = await axios.get(\"http://localhost:3000/api/posts/\" + result[0].id + \"/comments\")\n    console.log(res_cat);\n    ////console.log(result);\n    //  result = {\n    //     \"id\": res.data.rp.id,\n    //     \"content\": res.data.rp.content,\n    //     \"title\": res.data.rp.title\n    //  }\n    setDataFromServer(result)\n  }\n\n  return (\n    <div>\n\n      <div style={styles}>\n        {/* Метод для вывода данных из массива */}\n        {/* Ошибка была из-за того что запрос асинхронный, а мы пытали сразу выводить. А изначально стейут у нас null */}\n        {\n          dataFromServer\n            // И тут выходит мы српвшиваем, если у нас есть что-то в стейте, тогда выводим этот стейт, а если нет, то тогда показываем лоадер !\n            // как то так )\n            ? dataFromServer.map((item, index) =>\n              // <div class=\"wrap\" id=\"pressed\">\n              //   <h2 class=\"flex\" key={index}>{item.title}</h2>\n\n              //   <h4 class=\"flex\" key={index}>{item.content}</h4>\n              //   <label>Название</label>\n              // </div>)\n              <div style={styles} class=\"form_auth_block\">\n                <div class=\"form_auth_block_content\">\n                  <p class=\"form_auth_block_head_text\" key={index}>{item.title}</p>\n                  <form class=\"form_auth_style\" action=\"#\" method=\"post\">\n                    <label key={index}>{item.content}</label>\n                    <label key={index}>{item.username}</label>\n                    <label key={index}>{item.category}</label>\n\n                    <button class=\"dislike\"><i class=\"fa fa-thumbs-o-down\" aria-hidden=\"true\">+</i></button>\n                    <button class=\"like\" placeholder=\"-\"><i class=\"fa fa-thumbs-o-up\" aria-hidden=\"true\">-</i></button>\n\n                    <label>Вы можете оставить комментарий</label>\n                    <textarea rows=\"1\" cols=\"52\" name=\"textArea\" required></textarea>\n                    <button class=\"form_auth_button\" type=\"submit\" name=\"form_auth_submit\" onClick={() => loadData()}><Link to=\"/posts\">Добавить комментарий</Link></button>\n                    <button class=\"form_auth_button\" type=\"submit\" name=\"form_auth_submit\" onClick={() => loadData()}><Link to=\"/posts\">Читать все комментарии</Link></button>\n\n                    {/* <button class=\"learnmore\">Читать все комментарии</button> */}\n\n\n\n                  </form>\n                </div>\n              </div>)\n            : document.addEventListener('DOMContentLoaded', loadData()) //показать всех пользователей запуск функции при загрузке страници\n\n        }\n        <script>\n        </script>\n      </div>\n    </div>\n  );\n\n\n\n\n\n}\nexport default PostIdPage;"]},"metadata":{},"sourceType":"module"}